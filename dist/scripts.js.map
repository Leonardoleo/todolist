{"version":3,"sources":["../src/scripts.js"],"names":["ToDoClass","tasks","JSON","parse","localStorage","getItem","task","isComplete","loadTasks","addEventListeners","document","getElementById","addEventListener","event","keyCode","addTask","target","value","newTask","parentDiv","parentElement","classList","add","remove","push","index","taskIndex","preventDefault","splice","setItem","stringify","tasksHtml","reduce","html","generateTaskHtml","innerHTML","window","toDo"],"mappings":";;;;;;IAAMA,S;AACF,yBAAc;AAAA;;AACV,aAAKC,KAAL,GAAaC,KAAKC,KAAL,CAAWC,aAAaC,OAAb,CAAqB,OAArB,CAAX,CAAb;AACA,YAAI,CAAC,KAAKJ,KAAV,EAAiB;AACb,iBAAKA,KAAL,GAAa,CACT,EAAEK,MAAM,eAAR,EAAyBC,YAAY,KAArC,EADS,EAET,EAAED,MAAM,cAAR,EAAwBC,YAAY,IAApC,EAFS,EAGT,EAAED,MAAM,uBAAR,EAAiCC,YAAY,KAA7C,EAHS,CAAb;AAKH;AACD,aAAKC,SAAL;AACA,aAAKC,iBAAL;AACH;;;;4CAEmB;AAAA;;AAChBC,qBAASC,cAAT,CAAwB,SAAxB,EAAmCC,gBAAnC,CAAoD,UAApD,EAAgE,iBAAS;AACrE,oBAAIC,MAAMC,OAAN,KAAkB,EAAtB,EAA0B;AACtB,0BAAKC,OAAL,CAAaF,MAAMG,MAAN,CAAaC,KAA1B;AACAJ,0BAAMG,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACH;AACJ,aALD;AAMH;;;uCAEc;AACX,gBAAID,SAASN,SAASC,cAAT,CAAwB,SAAxB,CAAb;AACA,iBAAKI,OAAL,CAAaC,OAAOC,KAApB;AACAD,mBAAOC,KAAP,GAAe,EAAf;AACH;;;gCAEOX,I,EAAM;AACV,gBAAIY,UAAU;AACVZ,0BADU;AAEVC,4BAAY;AAFF,aAAd;AAIA,gBAAIY,YAAYT,SAASC,cAAT,CAAwB,SAAxB,EAAmCS,aAAnD;AACA,gBAAId,SAAS,EAAb,EAAiB;AACba,0BAAUE,SAAV,CAAoBC,GAApB,CAAwB,WAAxB;AACH,aAFD,MAEO;AACHH,0BAAUE,SAAV,CAAoBE,MAApB,CAA2B,WAA3B;AACA,qBAAKtB,KAAL,CAAWuB,IAAX,CAAgBN,OAAhB;AACA,qBAAKV,SAAL;AACH;AACJ;;;yCAEgBiB,K,EAAO;AACpB,iBAAKxB,KAAL,CAAWwB,KAAX,EAAkBlB,UAAlB,GAA+B,CAAC,KAAKN,KAAL,CAAWwB,KAAX,EAAkBlB,UAAlD;AACA,iBAAKC,SAAL;AACH;;;mCACUK,K,EAAOa,S,EAAW;AACzBb,kBAAMc,cAAN;AACA,iBAAK1B,KAAL,CAAW2B,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;AACA,iBAAKlB,SAAL;AACH;;;yCAEgBF,I,EAAMmB,K,EAAO;AAC1B,6RAKsCA,KALtC,4CAMMnB,KAAKC,UAAL,GAAgB,SAAhB,GAA0B,EANhC,iHAQmED,KAAKC,UAAL,GAAgB,UAAhB,GAA2B,EAR9F,yBASMD,KAAKA,IATX,2KAY2DmB,KAZ3D,qDAa+BA,KAb/B;AAmBH;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;oCAGY;AAAA;;AACRrB,yBAAayB,OAAb,CAAqB,OAArB,EAA8B3B,KAAK4B,SAAL,CAAe,KAAK7B,KAApB,CAA9B;AACA,gBAAI8B,YAAY,KAAK9B,KAAL,CAAW+B,MAAX,CAAkB,UAACC,IAAD,EAAO3B,IAAP,EAAamB,KAAb;AAAA,uBAAuBQ,QAAQ,OAAKC,gBAAL,CAAsB5B,IAAtB,EAA4BmB,KAA5B,CAA/B;AAAA,aAAlB,EAAqF,EAArF,CAAhB;AACAf,qBAASC,cAAT,CAAwB,UAAxB,EAAoCwB,SAApC,GAAgDJ,SAAhD;AACH;;;;;;AAGLK,OAAOxB,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AAClCyB,WAAO,IAAIrC,SAAJ,EAAP;AACH,CAFD","file":"scripts.js","sourcesContent":["class ToDoClass {\n    constructor() {\n        this.tasks = JSON.parse(localStorage.getItem('TASKS'));\n        if (!this.tasks) {\n            this.tasks = [\n                { task: 'Go to Dentist', isComplete: false },\n                { task: 'Do Gardening', isComplete: true },\n                { task: 'Renew Library Account', isComplete: false },\n            ];\n        }\n        this.loadTasks();\n        this.addEventListeners();\n    }\n\n    addEventListeners() {\n        document.getElementById('addTask').addEventListener('keypress', event => {\n            if (event.keyCode === 13) {\n                this.addTask(event.target.value);\n                event.target.value = '';\n            }\n        });\n    }\n\n    addTaskClick() {\n        let target = document.getElementById('addTask');\n        this.addTask(target.value);\n        target.value = \"\"\n    }\n\n    addTask(task) {\n        let newTask = {\n            task,\n            isComplete: false,\n        };\n        let parentDiv = document.getElementById('addTask').parentElement;\n        if (task === '') {\n            parentDiv.classList.add('has-error');\n        } else {\n            parentDiv.classList.remove('has-error');\n            this.tasks.push(newTask);\n            this.loadTasks();\n        }\n    }\n\n    toggleTaskStatus(index) {\n        this.tasks[index].isComplete = !this.tasks[index].isComplete;\n        this.loadTasks();\n    }\n    deleteTask(event, taskIndex) {\n        event.preventDefault();\n        this.tasks.splice(taskIndex, 1);\n        this.loadTasks();\n    }\n\n    generateTaskHtml(task, index) {\n        return `\n         <li class=\"list-group-item checkbox\">\n          <div class=\"row\">\n           <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 checkbox\">\n            <label><input id=\"toggleTaskStatus\" type=\"checkbox\"  \n            onchange=\"toDo.toggleTaskStatus(${index})\" value=\"\" class=\"\" \n            ${task.isComplete?'checked':''}></label>\n           </div>\n           <div class=\"col-md-10 col-xs-10 col-lg-10 col-sm-10 task-text ${task.isComplete?'complete':''}\">\n            ${task.task}\n          </div>\n          <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 delete-icon-area\">\n            <a class=\"\" href=\"/\" onClick=\"toDo.deleteTask(event, ${index})\"><i \n            id=\"deleteTask\" data-id=\"${index}\" class=\"delete-icon glyphicon \n            glyphicon-trash\"></i></a>\n           </div>\n          </div>\n         </li>\n       `;\n    }\n\n\n\n\n\n    //      generateTaskHtml(task, index) {\n    //             return \n    //             <li class=\"list-group-item checkbox\">\n    //             <div class=\"row\">\n    //                 <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 checkbox\">\n    //                    <label><input id=\"toggleTaskStatus\" type=\"checkbox\"              onchange=\"toDo.toggleTaskStatus(${index})\" value=\"\" class=\"\" ${task.isComplete?'checked':''}></label>\n    //                 </div>\n    //                 <div class=\"col-md-10 col-xs-10 col-lg-10 col-sm-10 task-text ${task.isComplete?'complete':''}\"> \n    //                     ${task.task} \n    //                 </div>\n    //                 <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 delete-icon-area\">\n    //                     <a class=\"\" href=\"/\" onClick=\"toDo.deleteTask(event, ${index})\"><i id=\"deleteTask\" data-id=\"${index}\" class=\"delete-icon glyphicon glyphicon-trash\"></i></a>\n    //                 </div>\n    //             </div>\n    //         </li>\n    //         ;\n    // }\n\n\n    loadTasks() {\n        localStorage.setItem('TASKS', JSON.stringify(this.tasks));\n        let tasksHtml = this.tasks.reduce((html, task, index) => html += this.generateTaskHtml(task, index), '');\n        document.getElementById('taskList').innerHTML = tasksHtml;\n    }\n}\n\nwindow.addEventListener(\"load\", () => {\n    toDo = new ToDoClass();\n});"]}